apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ default .Release.Namespace .Values.namespace }}
  labels:
    app: {{ .Chart.Name }}
    severity: {{ .Values.responsible.severity }}
    owner: {{ .Values.responsible.owner }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        severity: {{ .Values.responsible.severity }}
        owner: {{ .Values.responsible.owner }}
    {{- if .Values.podAnnotations }}
      annotations:
      {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
    {{- end }}
    spec:
      restartPolicy: Always
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          env:
            - name: BACKEND_STORE_URI
              value: "{{ .Values.db.type }}://{{ .Values.db.user }}:{{ .Values.db.password }}@{{ .Values.db.host }}:{{ .Values.db.port }}/{{ .Values.db.database }}"
            - name: DEFAULT_ARTIFACT_ROOT
              value: "{{ .Values.default_artifact_root }}"
            - name: AWS_ACCESS_KEY_ID
              value: "{{ .Values.aws_access.access_key_id }}"
            - name: AWS_SECRET_ACCESS_KEY
              value: "{{ .Values.aws_access.secret_access_key_id }}"
      # !!! change tolerations
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
